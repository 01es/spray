{"body": "<div class=\"section\" id=\"configuration\">\n<h1>Configuration</h1>\n<p>Just like Akka <em>spray-io</em> relies on the <a class=\"reference external\" href=\"https://github.com/typesafehub/config\">typesafe config</a> library for configuration. As such its JAR contains a\n<tt class=\"docutils literal\"><span class=\"pre\">reference.conf</span></tt> file holding the default values of all configuration settings. In your application you typically\nprovide an <tt class=\"docutils literal\"><span class=\"pre\">application.conf</span></tt>, in which you override Akka and/or <em>spray</em> settings according to your needs.</p>\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">Since <em>spray</em> uses the same configuration technique as Akka you might want to check out the\n<a class=\"reference external\" href=\"http://doc.akka.io/docs/akka/2.0.4/general/configuration.html\">Akka Documentation on Configuration</a>.</p>\n</div>\n<p>This is the <tt class=\"docutils literal\"><span class=\"pre\">reference.conf</span></tt> of the <em>spray-io</em> module:</p>\n<div class=\"highlight-bash\"><div class=\"highlight\"><pre><span class=\"c\">#################################</span>\n<span class=\"c\"># Akka IO Reference Config File #</span>\n<span class=\"c\">#################################</span>\n\n<span class=\"c\"># This is the reference config file that contains all the default settings.</span>\n<span class=\"c\"># Make your edits/overrides in your application.conf.</span>\n\nakka <span class=\"o\">{</span>\n\n  io <span class=\"o\">{</span>\n\n    <span class=\"c\"># By default the select loops run on dedicated threads, hence using a</span>\n    <span class=\"c\"># PinnedDispatcher</span>\n    pinned-dispatcher <span class=\"o\">{</span>\n      <span class=\"nb\">type</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;PinnedDispatcher&quot;</span>\n      <span class=\"nv\">executor</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;thread-pool-executor&quot;</span>\n      thread-pool-executor.allow-core-pool-timeout <span class=\"o\">=</span> off\n    <span class=\"o\">}</span>\n\n    tcp <span class=\"o\">{</span>\n\n      <span class=\"c\"># The number of selectors to stripe the served channels over; each of</span>\n      <span class=\"c\"># these will use one select loop on the selector-dispatcher.</span>\n      nr-of-selectors <span class=\"o\">=</span> 1\n\n      <span class=\"c\"># Maximum number of open channels supported by this TCP module; there is</span>\n      <span class=\"c\"># no intrinsic general limit, this setting is meant to enable DoS</span>\n      <span class=\"c\"># protection by limiting the number of concurrently connected clients.</span>\n      <span class=\"c\"># Also note that this is a &quot;soft&quot; limit; in certain cases the implementation</span>\n      <span class=\"c\"># will accept a few connections more or a few less than the number configured</span>\n      <span class=\"c\"># here. Must be an integer &gt; 0 or &quot;unlimited&quot;.</span>\n      max-channels <span class=\"o\">=</span> 256000\n\n      <span class=\"c\"># When trying to assign a new connection to a selector and the chosen</span>\n      <span class=\"c\"># selector is at full capacity, retry selector choosing and assignment</span>\n      <span class=\"c\"># this many times before giving up</span>\n      selector-association-retries <span class=\"o\">=</span> 10\n\n      <span class=\"c\"># The maximum number of connection that are accepted in one go,</span>\n      <span class=\"c\"># higher numbers decrease latency, lower numbers increase fairness on</span>\n      <span class=\"c\"># the worker-dispatcher</span>\n      batch-accept-limit <span class=\"o\">=</span> 10\n\n      <span class=\"c\"># The number of bytes per direct buffer in the pool used to read or write</span>\n      <span class=\"c\"># network data from the kernel.</span>\n      direct-buffer-size <span class=\"o\">=</span> 128 KiB\n\n      <span class=\"c\"># The maximal number of direct buffers kept in the direct buffer pool for</span>\n      <span class=\"c\"># reuse.</span>\n      direct-buffer-pool-limit <span class=\"o\">=</span> 1000\n\n      <span class=\"c\"># The duration a connection actor waits for a `Register` message from</span>\n      <span class=\"c\"># its commander before aborting the connection.</span>\n      register-timeout <span class=\"o\">=</span> 5s\n\n      <span class=\"c\"># The maximum number of bytes delivered by a `Received` message. Before</span>\n      <span class=\"c\"># more data is read from the network the connection actor will try to</span>\n      <span class=\"c\"># do other work.</span>\n      max-received-message-size <span class=\"o\">=</span> unlimited\n\n      <span class=\"c\"># Enable fine grained logging of what goes on inside the implementation.</span>\n      <span class=\"c\"># Be aware that this may log more than once per message sent to the actors</span>\n      <span class=\"c\"># of the tcp implementation.</span>\n      trace-logging <span class=\"o\">=</span> off\n\n      <span class=\"c\"># Fully qualified config path which holds the dispatcher configuration</span>\n      <span class=\"c\"># to be used for running the select() calls in the selectors</span>\n      selector-dispatcher <span class=\"o\">=</span> <span class=\"s2\">&quot;akka.io.pinned-dispatcher&quot;</span>\n\n      <span class=\"c\"># Fully qualified config path which holds the dispatcher configuration</span>\n      <span class=\"c\"># for the read/write worker actors</span>\n      worker-dispatcher <span class=\"o\">=</span> <span class=\"s2\">&quot;akka.actor.default-dispatcher&quot;</span>\n\n      <span class=\"c\"># Fully qualified config path which holds the dispatcher configuration</span>\n      <span class=\"c\"># for the selector management actors</span>\n      management-dispatcher <span class=\"o\">=</span> <span class=\"s2\">&quot;akka.actor.default-dispatcher&quot;</span>\n\n      <span class=\"c\"># Fully qualified config path which holds the dispatcher configuration</span>\n      <span class=\"c\"># on which file IO tasks are scheduled</span>\n      file-io-dispatcher <span class=\"o\">=</span> <span class=\"s2\">&quot;akka.actor.default-dispatcher&quot;</span>\n\n      <span class=\"c\"># The maximum number of bytes (or &quot;unlimited&quot;) to transfer in one batch when using</span>\n      <span class=\"c\"># `WriteFile` command which uses `FileChannel.transferTo` to pipe files to a TCP socket.</span>\n      <span class=\"c\"># On some OS like Linux `FileChannel.transferTo` may block for a long time when network</span>\n      <span class=\"c\"># IO is faster than file IO. Decreasing the value may improve fairness while increasing</span>\n      <span class=\"c\"># may improve throughput.</span>\n      file-io-transferTo-limit <span class=\"o\">=</span> 512 KiB\n    <span class=\"o\">}</span>\n\n    udp <span class=\"o\">{</span>\n\n      <span class=\"c\"># The number of selectors to stripe the served channels over; each of</span>\n      <span class=\"c\"># these will use one select loop on the selector-dispatcher.</span>\n      nr-of-selectors <span class=\"o\">=</span> 1\n\n      <span class=\"c\"># Maximum number of open channels supported by this UDP module Generally</span>\n      <span class=\"c\"># UDP does not require a large number of channels, therefore it is</span>\n      <span class=\"c\"># recommended to keep this setting low.</span>\n      max-channels <span class=\"o\">=</span> 4096\n\n      <span class=\"c\"># The select loop can be used in two modes:</span>\n      <span class=\"c\"># - setting &quot;infinite&quot; will select without a timeout, hogging a thread</span>\n      <span class=\"c\"># - setting a positive timeout will do a bounded select call,</span>\n      <span class=\"c\">#   enabling sharing of a single thread between multiple selectors</span>\n      <span class=\"c\">#   (in this case you will have to use a different configuration for the</span>\n      <span class=\"c\">#   selector-dispatcher, e.g. using &quot;type=Dispatcher&quot; with size 1)</span>\n      <span class=\"c\"># - setting it to zero means polling, i.e. calling selectNow()</span>\n      <span class=\"k\">select</span>-timeout <span class=\"o\">=</span> infinite\n\n      <span class=\"c\"># When trying to assign a new connection to a selector and the chosen</span>\n      <span class=\"c\"># selector is at full capacity, retry selector choosing and assignment</span>\n      <span class=\"c\"># this many times before giving up</span>\n      selector-association-retries <span class=\"o\">=</span> 10\n\n      <span class=\"c\"># The maximum number of datagrams that are read in one go,</span>\n      <span class=\"c\"># higher numbers decrease latency, lower numbers increase fairness on</span>\n      <span class=\"c\"># the worker-dispatcher</span>\n      receive-throughput <span class=\"o\">=</span> 3\n\n      <span class=\"c\"># The number of bytes per direct buffer in the pool used to read or write</span>\n      <span class=\"c\"># network data from the kernel.</span>\n      direct-buffer-size <span class=\"o\">=</span> 128 KiB\n\n      <span class=\"c\"># The maximal number of direct buffers kept in the direct buffer pool for</span>\n      <span class=\"c\"># reuse.</span>\n      direct-buffer-pool-limit <span class=\"o\">=</span> 1000\n\n      <span class=\"c\"># The maximum number of bytes delivered by a `Received` message. Before</span>\n      <span class=\"c\"># more data is read from the network the connection actor will try to</span>\n      <span class=\"c\"># do other work.</span>\n      received-message-size-limit <span class=\"o\">=</span> unlimited\n\n      <span class=\"c\"># Enable fine grained logging of what goes on inside the implementation.</span>\n      <span class=\"c\"># Be aware that this may log more than once per message sent to the actors</span>\n      <span class=\"c\"># of the tcp implementation.</span>\n      trace-logging <span class=\"o\">=</span> off\n\n      <span class=\"c\"># Fully qualified config path which holds the dispatcher configuration</span>\n      <span class=\"c\"># to be used for running the select() calls in the selectors</span>\n      selector-dispatcher <span class=\"o\">=</span> <span class=\"s2\">&quot;akka.io.pinned-dispatcher&quot;</span>\n\n      <span class=\"c\"># Fully qualified config path which holds the dispatcher configuration</span>\n      <span class=\"c\"># for the read/write worker actors</span>\n      worker-dispatcher <span class=\"o\">=</span> <span class=\"s2\">&quot;akka.actor.default-dispatcher&quot;</span>\n\n      <span class=\"c\"># Fully qualified config path which holds the dispatcher configuration</span>\n      <span class=\"c\"># for the selector management actors</span>\n      management-dispatcher <span class=\"o\">=</span> <span class=\"s2\">&quot;akka.actor.default-dispatcher&quot;</span>\n    <span class=\"o\">}</span>\n\n    udp-connected <span class=\"o\">{</span>\n\n      <span class=\"c\"># The number of selectors to stripe the served channels over; each of</span>\n      <span class=\"c\"># these will use one select loop on the selector-dispatcher.</span>\n      nr-of-selectors <span class=\"o\">=</span> 1\n\n      <span class=\"c\"># Maximum number of open channels supported by this UDP module Generally</span>\n      <span class=\"c\"># UDP does not require a large number of channels, therefore it is</span>\n      <span class=\"c\"># recommended to keep this setting low.</span>\n      max-channels <span class=\"o\">=</span> 4096\n\n      <span class=\"c\"># The select loop can be used in two modes:</span>\n      <span class=\"c\"># - setting &quot;infinite&quot; will select without a timeout, hogging a thread</span>\n      <span class=\"c\"># - setting a positive timeout will do a bounded select call,</span>\n      <span class=\"c\">#   enabling sharing of a single thread between multiple selectors</span>\n      <span class=\"c\">#   (in this case you will have to use a different configuration for the</span>\n      <span class=\"c\">#   selector-dispatcher, e.g. using &quot;type=Dispatcher&quot; with size 1)</span>\n      <span class=\"c\"># - setting it to zero means polling, i.e. calling selectNow()</span>\n      <span class=\"k\">select</span>-timeout <span class=\"o\">=</span> infinite\n\n      <span class=\"c\"># When trying to assign a new connection to a selector and the chosen</span>\n      <span class=\"c\"># selector is at full capacity, retry selector choosing and assignment</span>\n      <span class=\"c\"># this many times before giving up</span>\n      selector-association-retries <span class=\"o\">=</span> 10\n\n      <span class=\"c\"># The maximum number of datagrams that are read in one go,</span>\n      <span class=\"c\"># higher numbers decrease latency, lower numbers increase fairness on</span>\n      <span class=\"c\"># the worker-dispatcher</span>\n      receive-throughput <span class=\"o\">=</span> 3\n\n      <span class=\"c\"># The number of bytes per direct buffer in the pool used to read or write</span>\n      <span class=\"c\"># network data from the kernel.</span>\n      direct-buffer-size <span class=\"o\">=</span> 128 KiB\n\n      <span class=\"c\"># The maximal number of direct buffers kept in the direct buffer pool for</span>\n      <span class=\"c\"># reuse.</span>\n      direct-buffer-pool-limit <span class=\"o\">=</span> 1000\n\n      <span class=\"c\"># The maximum number of bytes delivered by a `Received` message. Before</span>\n      <span class=\"c\"># more data is read from the network the connection actor will try to</span>\n      <span class=\"c\"># do other work.</span>\n      received-message-size-limit <span class=\"o\">=</span> unlimited\n\n      <span class=\"c\"># Enable fine grained logging of what goes on inside the implementation.</span>\n      <span class=\"c\"># Be aware that this may log more than once per message sent to the actors</span>\n      <span class=\"c\"># of the tcp implementation.</span>\n      trace-logging <span class=\"o\">=</span> off\n\n      <span class=\"c\"># Fully qualified config path which holds the dispatcher configuration</span>\n      <span class=\"c\"># to be used for running the select() calls in the selectors</span>\n      selector-dispatcher <span class=\"o\">=</span> <span class=\"s2\">&quot;akka.io.pinned-dispatcher&quot;</span>\n\n      <span class=\"c\"># Fully qualified config path which holds the dispatcher configuration</span>\n      <span class=\"c\"># for the read/write worker actors</span>\n      worker-dispatcher <span class=\"o\">=</span> <span class=\"s2\">&quot;akka.actor.default-dispatcher&quot;</span>\n\n      <span class=\"c\"># Fully qualified config path which holds the dispatcher configuration</span>\n      <span class=\"c\"># for the selector management actors</span>\n      management-dispatcher <span class=\"o\">=</span> <span class=\"s2\">&quot;akka.actor.default-dispatcher&quot;</span>\n    <span class=\"o\">}</span>\n  <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</pre></div>\n</div>\n</div>\n", "display_toc": false, "title": "Configuration", "sourcename": "", "customsidebar": null, "current_page_name": "documentation/spray-io/configuration", "next": {"link": "../io-bridge/", "title": "IOBridge"}, "rellinks": [["genindex", "General Index", "I", "index"], ["documentation/spray-io/io-bridge", "IOBridge", "N", "next"], ["documentation/spray-io/installation", "Installation", "P", "previous"]], "meta": {}, "parents": [{"link": "../../", "title": "Documentation"}, {"link": "../", "title": "spray-io"}], "sidebars": null, "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Configuration</a></li>\n</ul>\n", "prev": {"link": "../installation/", "title": "Installation"}, "metatags": ""}